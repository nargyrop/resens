name: Python package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (GDAL)
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev libproj-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/dev.txt

    - name: Get package version
      id: get_version
      run: |
        VERSION=$(python -c "from resens import __version__; print(__version__)")
        echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build package
      run: |
        python -m build

    - name: Publish package to PyPI
      if: success() && github.ref == 'refs/heads/master'
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USER }}
        PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload --skip-existing dist/*  # Upload the package to PyPI
        echo "Successfully uploaded package version ${{ env.PACKAGE_VERSION }} to PyPI"
